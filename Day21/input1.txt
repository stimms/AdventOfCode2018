#ip 1
seti 123 0 3 //set r3 to 123
bani 3 456 3 //and with r3 and 456 -> 72
eqri 3 72 3 //if 72 set r3 to 1
addr 3 1 1 //add registers 3 and 1, skips next instruction
seti 0 0 1 //jumps back to start
seti 0 9 3 //5. sets r3 to 0
bori 3 65536 5 // binary or with 65536 and r3 -> r5
seti 15028787 4 3 // r3 -> 15028787
bani 5 255 2 //and 255 and r5 -> r2(0)
addr 3 2 3 // add 3 and 2 and -> r3
bani 3 16777215 3 //and r3 and 16777215 -> r3
muli 3 65899 3 //serious underflow -1755410863 -> r3
bani 3 16777215 3 //binary and r3 and 16777215-> 6196817 ->r3
gtir 256 5 2 // if r5> 256 1->r1
addr 2 1 1 //14. add r2 and r1 -> r1
addi 1 1 1 //15. add 1 to r1 -> r1
seti 27 3 1 //16. skip
seti 0 9 2 //17. set r2 = 0
addi 2 1 4 //18. add r2+1 r4
muli 4 256 4 //19. multiply r4 x 256 -> r4
gtrr 4 5 4 //set r4 to 0 if r4<r5
addr 4 1 1 //potenaial skip if r4> r5
addi 1 1 1 //22. 
seti 25 1 1 //23. 
addi 2 1 2 //24. add 2 to r2
seti 17 8 1 //25. set r1 to 17
setr 2 4 5 //26. set r5 to r2
seti 7 3 1 //27 set r1 to 7
eqrr 3 0 2 //28. if r0 == r3 set r2 to 1
addr 2 1 1 //add r2 and r1 //potential escape if r2 = 1, if r0=r3
seti 5 3 1 //set r1 to 5